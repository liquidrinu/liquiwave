const { spawn } = require('child_process');
const opts = require('./vlc_config')();

// spawn vlc
const child = spawn('vlc', opts);

// options log 
opts.forEach((x) => {
    if (x == opts[opts.length - 1])
        console.log('\nTest url: ' + x + '\n');
    else {
        console.log(x);
    }
});

// stdout code
child.stdout.on('data', (data) => {
    console.log(`${data}`);
});

//exit code
child.on('exit', function (code, signal) {
    console.log('child process exited with ' +
        `code ${code} and signal ${signal}`);
});



// [ extra options ]
child.stderr.pipe(process.stderr);
//child.stdout.pipe(process.stdout);
//process.stdin.pipe(child.stdin);
//child.stdout.setEncoding('utf8');


// get player status from http vlc --extraintf http (xml file)
// wget http://192.168.1.14:5555/requests/status.xml --user= --password=kaas
var exec = require('child_process').exec;

function intervalTime(i) {
    setTimeout(() => {
        getXml();
        intervalTime(++i);
    }, 250);
}

intervalTime(0);

// get status xml page generated by VLC
function getXml() {
    let
        url_stat = "http://192.168.1.14:5555/requests/status.xml",
        url_art = "http://192.168.1.14:5555/art",
        user = "",
        pwd = "kaas";

    dir = exec("wget -O ./public/status.xml " + url_stat +
        " --user=" + user + " --password=" + pwd,
        function (err, stdout, stderr) {
            if (err) {
                return err;
            }
        });
    /*
    dir = exec("wget -O ./public/artwork.png " + url_art +
        " --user=" + user + " --password=" + pwd + ' || ' + ' rm ' + './public/artwork.png ',
        function (err, stdout, stderr) {
            if (err) {
                return err;
            }
        });
    */
}

// VLC control mapping
const player = require('./commands');

exports.control = function (msg) {
    for (var cmd in player) {
        if (cmd == msg) {
            child.stdin.write(player[cmd]);
        }
    }
};

//specialzed commands
exports.urls = function (msg) {
    // parse http(s) stream
    if (/^http/.test(msg)) {
        child.stdin.write('add ' + msg.concat('\n'));
    }
    // add track from local FS
    if (/enqueue/.test(msg)) {
        child.stdin.write(msg.concat('\n'));
    } else if (/\/home/.test(msg)) {
       child.stdin.write('add ' + msg.concat('\n'));
    }
};